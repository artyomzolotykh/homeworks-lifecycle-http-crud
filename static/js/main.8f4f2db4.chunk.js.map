{"version":3,"sources":["components/Item.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","item","id","content","className","onClick","removeItem","handleRemoveItem","App","url","useState","message","setMessage","listing","setListing","reload","setReload","fetch","method","then","console","log","Math","random","useEffect","response","json","commits","map","onSubmit","evt","length","preventDefault","newItem","headers","body","JSON","stringify","value","onChange","target","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAkBeA,EAlBF,SAAAC,GAEX,MAAsBA,EAAMC,KAArBC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,QAMX,OACE,sBAAKC,UAAU,OAAf,UACE,wBAAQA,UAAU,aAAaC,QAAS,kBANnB,SAAAH,GACvBF,EAAMM,WAAWJ,GAK+BK,CAAiBL,IAA/D,eACA,qBAAKE,UAAU,cAAf,SACGD,QCmEMK,MA3Ef,WACE,IAAMC,EAAM,+BAEZ,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KA4BMV,EAAa,SAAAJ,GACjBe,MAAMR,EAAMP,EAAI,CACdgB,OAAQ,WAEPC,KAAKC,QAAQC,IAAIC,KAAKC,WACtBJ,KAAKH,EAAUM,KAAKC,YAazB,OANAC,qBAAU,WACRP,MAAMR,GACHU,MAAK,SAAAM,GAAQ,OAAIA,EAASC,UAC1BP,MAAK,SAAAQ,GAAO,OAAIb,EAAWa,QAC7B,CAACZ,IAGF,sBAAKX,UAAU,MAAf,UAEE,sBAAKA,UAAU,SAAf,UACE,yCACA,wBAAQC,QAfK,WACjBW,EAAUM,KAAKC,WAcX,uBAGF,qBAAKnB,UAAU,UAAf,SACGS,EAAQe,KAAI,SAAA3B,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,EAAMK,WAAYA,GAAjCL,EAAKC,SAGvC,uBAAM2B,SAnDW,SAAAC,GACnB,IAAM5B,EAAKW,EAAQkB,OAAS,EAAIlB,EAAQA,EAAQkB,OAAS,GAAG7B,GAAK,EAAI,EAErE4B,EAAIE,iBACJ,IAAMC,EAAU,CACd,GAAM/B,EACN,QAAWS,GAGbM,MAAMR,EAAK,CACTS,OAAQ,OACRgB,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUJ,KAEpBd,KAAKH,EAAUM,KAAKC,WACpBJ,KAAKC,QAAQC,IAAIC,KAAKC,WACtBJ,KAAKP,EAAW,MAiCjB,UACE,qBAAKR,UAAU,QAAf,sBAGA,0BAAUkC,MAAO3B,EAAS4B,SA5DJ,SAAAT,GAC1B,IAAOQ,EAASR,EAAIU,OAAbF,MACP1B,EAAW0B,MA2DP,wBAAQG,KAAK,SAAb,2BC5DOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.8f4f2db4.chunk.js","sourcesContent":["const Item = props => {\r\n\r\n  const {id, content} = props.item;\r\n\r\n  const handleRemoveItem = id => {\r\n    props.removeItem(id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Item\">\r\n      <button className=\"ItemRemove\" onClick={() => handleRemoveItem(id)}>x</button>\r\n      <div className=\"ItemContent\">\r\n        {content}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Item from './components/Item';\n\nfunction App() {\n  const url = 'http://localhost:7777/notes/';\n\n  const [message, setMessage] = useState('');\n  const [listing, setListing] = useState([]);\n  const [reload, setReload] = useState(0);\n\n  const handleMessageChange = evt => {\n    const {value} = evt.target;\n    setMessage(value);\n  }\n\n  const handleSubmit = evt => {\n    const id = listing.length > 0 ? listing[listing.length - 1].id + 1 : 0;\n\n    evt.preventDefault();\n    const newItem = {\n      \"id\": id,\n      \"content\": message\n    }\n    \n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(newItem)\n    })\n      .then(setReload(Math.random()))\n      .then(console.log(Math.random()))\n      .then(setMessage(''));\n  }\n\n  const removeItem = id => {\n    fetch(url + id, {\n      method: 'DELETE'\n    })\n      .then(console.log(Math.random()))\n      .then(setReload(Math.random()));\n  }\n\n  const reloadPage = () => {\n    setReload(Math.random());\n  }\n\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(commits => setListing(commits))\n  }, [reload]);\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"header\">\n        <span>Notes</span>\n        <button onClick={reloadPage}>↻</button>\n      </div>\n\n      <div className=\"wrapper\">\n        {listing.map(item => <Item key={item.id} item={item} removeItem={removeItem} />)}\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"title\">\n          New Note\n        </div>\n        <textarea value={message} onChange={handleMessageChange} />\n        <button type=\"submit\">→</button>\n      </form>\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}